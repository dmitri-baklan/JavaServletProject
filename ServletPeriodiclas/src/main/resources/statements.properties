#database
        #main

                db.main.driver=org.postgresql.Driver
                db.main.url=jdbc:postgresql
                db.main.port=5432
                db.main.name=periodicals_EE
                db.main.username=postgres
                db.main.password=1246
        #test
                db.test.driver=org.postgresql.Driver
                db.test.url=jdbc:postgresql
                db.test.port=5432
                db.test.name=periodicals_test
                db.test.username=postgres
                db.test.password=1246

#users
        #find
                user.find.by.email=SELECT * FROM users \
                                  LEFT JOIN users_periodicals as up ON users.u_id = up.user_id \
                                  LEFT JOIN periodicals ON periodicals.p_id = up.periodical_id \
                                  WHERE users.u_email = ?
                                #AND periodicals.p_id IS NOT NULL

                user.find.reader.by.id=SELECT * FROM users \
                                        LEFT JOIN users_periodicals as up \
                                        ON users.u_id = up.user_id \
                                        LEFT JOIN periodicals \
                                        ON periodicals.p_id = up.periodical_id \
                                        WHERE users.u_id = ? AND u_role = 'READER'

                user.find.by.role=SELECT * FROM (select count(*) as pages from users WHERE u_role=?) pages, users \
                                        WHERE u_role =? \
                                        ORDER BY u_email \
                                        LIMIT ? \
                                        OFFSET ?

        #insert
                user.insert=INSERT INTO users (u_email, u_password, u_name, u_surname, u_role, u_is_active, u_balance, u_subscriptions) \
                            VALUES (?,?,?,?,?,?,?,?)  RETURNING u_id

        #update
                user.update=UPDATE users SET u_email=?, u_password=?, u_name=?, u_surname=?, u_role=?, u_is_active=?, u_balance=?, u_subscriptions=? \
                                WHERE u_id=? RETURNING u_id
                user.update.edited=UPDATE users SET u_password=?, u_name=?, u_surname=?,\
                                WHERE u_id=?
                user.update.balance=UPDATE users SET u_balance=? \
                                WHERE u_id=?
                user.update.subscriptions=UPDATE users SET u_subscriptions=?, u_balance=? \
                                WHERE u_id=?

#users_periodicals
        #insert
                users_periodicals.insert=INSERT INTO users_periodicals (user_id, periodical_id) VALUES (?,?)

        #delete
                users_periodicals.delete.p_id=DELETE FROM users_periodicals WHERE periodical_id=?
                users_periodicals.delete.u_id.and.p_id=DELETE FROM users_periodicals WHERE user_id=? and periodical_id=?
                users_periodicals.delete.by.email=DELETE FROM users_periodicals WHERE user_id=\
                                                  (SELECT u_id FROM users WHERE u_email=?)

#periodicals
        #find
                periodical.find.all=SELECT * FROM(select count(*) as pages from periodicals)  pages, users_periodicals as up \
                                    RIGHT JOIN (select * from periodicals \
                                    ORDER BY %s %s LIMIT ? OFFSET ?) as per \
                                    ON p_id = periodical_id \
                                    LEFT JOIN users \
                                    ON u_id = user_id \
                                    WHERE p_id IS NOT NULL \
                                    ORDER BY %s %s

                periodical.find.by.id=SELECT * FROM periodicals \
                                        LEFT JOIN users_periodicals as up \
                                        ON up.periodical_id = p_id \
                                        LEFT JOIN users \
                                        ON up.user_id = u_id \
                                        WHERE p_id=?

                periodical.find.by.name=SELECT * FROM periodicals \
                                        LEFT JOIN users_periodicals as up \
                                        ON up.periodical_id = p_id \
                                        LEFT JOIN users \
                                        ON up.user_id = u_id \
                                        WHERE p_name=?

                periodical.filter.by.subject=SELECT * FROM(select count(*) as pages from periodicals WHERE p_subject=?)  pages, users_periodicals as up \
                                            RIGHT JOIN (SELECT * FROM periodicals WHERE p_subject=? \
                                            ORDER BY %s %s LIMIT ? OFFSET ?) as per \
                                            ON p_id = periodical_id \
                                            LEFT JOIN users \
                                            ON u_id = user_id \
                                            WHERE p_id IS NOT NULL \
                                            ORDER BY %s %s

        #insert
                periodical.insert=INSERT INTO periodicals (p_name, p_subject, p_price, p_subscribers) VALUES (?, ?, ?, ?) RETURNING p_id

        #update
                periodical.update=UPDATE public.periodicals SET p_name=?, p_subject=?, p_price=?, p_subscribers=? \
                                        WHERE p_id=? RETURNING p_id
                periodical.update.subscribers=UPDATE periodicals SET p_subscribers=? WHERE p_id=?

        #delete
                periodical.delete=DELETE FROM public.periodicals WHERE p_id=? RETURNING p_id


#replenishments
        #find
                replenishment.find.by.user_id=SELECT * FROM replenishments \
                                                LEFT JOIN users \
                                                ON u_id = r_user_id \
                                                WHERE r_user_id = ? \
                                                ORDER BY r_time DESC
#LIMIT ? \
#OFFSET ?

        #insert
                replenishment.insert=INSERT INTO replenishments (r_sum, r_user_id, r_time) VALUES (?, ?, ?) RETURNING r_id